syntax = "proto3";

package example.grpc;

option go_package = "examples/go/grpc";

option java_package = "examples.java.grpc";

import "google/api/annotations.proto";

import "api/model.proto";

service Events {
  rpc Get(example.pb.IdRequest) returns (example.pb.EventRecord) {
    option (google.api.http) = {
      put: '/events?id={id}'
      body: 'event'
    };
  }

  // Use a bidirectional client/server contract allowing a persistent
  // stream of events and responses for creating audit events.
  rpc Put(stream example.pb.Event) returns (stream example.pb.EventResponse) {
    option (google.api.http) = {
      put: '/events'
      body: 'event'
    };
  }

  // Validate the original request was processed
  rpc Verify(stream example.pb.EventResponse) returns (stream example.pb.EventVerifyResponse) {
      option (google.api.http) = {
        post: '/events/verify'
        body: 'event_verify_response'
      };
  }

  rpc FindByDateRange(example.pb.DateRangeRequest) returns (stream example.pb.EventRecord) {
    option (google.api.http) = {
      post: '/event/list'
      body: 'event_verify_response'
    };
  }
}